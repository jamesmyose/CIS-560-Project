 USE kprice147-- Your database here.

/*********************
 * Drop Tables
 *********************/

IF SCHEMA_ID(N'Movies') IS NULL
   EXEC(N'CREATE SCHEMA [Movies];');
GO


DROP TABLE IF EXISTS Movies.MovieActor;
DROP TABLE IF EXISTS Movies.MovieDirectors;
DROP TABLE IF EXISTS Movies.MovieReviews;
DROP TABLE IF EXISTS Movies.MovieCinema;
DROP TABLE IF EXISTS Movies.Directors;
DROP TABLE IF EXISTS Movies.Review;
DROP TABLE IF EXISTS Movies.Cinema;
DROP TABLE IF EXISTS Movies.Actors;
DROP TABLE IF EXISTS Movies.Movie;
GO

/******************
 * Create Tables
 ******************/

CREATE TABLE Movies.Movie
(
   MovieID INT NOT NULL IDENTITY(1, 1) PRIMARY KEY,
   MovieName NVARCHAR(64) NOT NULL UNIQUE,
   Genre NVARCHAR(64) NOT NULL,
   ReleaseDate DATETIME2(0) NOT NULL,
   CostOfProduction FLOAT NOT NULL,
   IsRemoved INT NOT NULL DEFAULT(0),
   CreatedOn DATETIMEOFFSET NOT NULL DEFAULT(SYSDATETIMEOFFSET()),
   UpdatedOn DATETIMEOFFSET NOT NULL DEFAULT(SYSDATETIMEOFFSET())
);

CREATE TABLE Movies.Actors
(
   ActorID INT NOT NULL IDENTITY(1, 1) PRIMARY KEY,
   FirstName NVARCHAR(32) NOT NULL,
   MiddleName NVARCHAR(32),
   LastName NVARCHAR(32) NOT NULL,
   IsRemoved INT NOT NULL DEFAULT(0),
   CreatedOn DATETIMEOFFSET NOT NULL DEFAULT(SYSDATETIMEOFFSET()),
   UpdatedOn DATETIMEOFFSET NOT NULL DEFAULT(SYSDATETIMEOFFSET())
);

CREATE TABLE Movies.Cinema
(
   CinemaID INT NOT NULL IDENTITY(1, 1) PRIMARY KEY,
   PlayingTime DATETIME2(0) NOT NULL,
   [Location] NVARCHAR(64) NOT NULL,
   TicektPrice FLOAT NOT NULL,
   IsRemoved INT NOT NULL DEFAULT(0),
   CreatedOn DATETIMEOFFSET NOT NULL DEFAULT(SYSDATETIMEOFFSET()),
   UpdatedOn DATETIMEOFFSET NOT NULL DEFAULT(SYSDATETIMEOFFSET())
);

CREATE TABLE Movies.Review
(
   ReviewID INT NOT NULL IDENTITY(1, 1) PRIMARY KEY,
   Rating INT NOT NULL,
   Review NVARCHAR(1024) NOT NULL,
   IsRemoved INT NOT NULL DEFAULT(0),
   CreatedOn DATETIMEOFFSET NOT NULL DEFAULT(SYSDATETIMEOFFSET()),
   UpdatedOn DATETIMEOFFSET NOT NULL DEFAULT(SYSDATETIMEOFFSET())
);

CREATE TABLE Movies.Directors
(
   DirectorID INT NOT NULL IDENTITY(1, 1) PRIMARY KEY,
   FirstName NVARCHAR(32) NOT NULL,
   MiddleName NVARCHAR(32),
   LastName NVARCHAR(32) NOT NULL,
   IsRemoved INT NOT NULL DEFAULT(0),
   CreatedOn DATETIMEOFFSET NOT NULL DEFAULT(SYSDATETIMEOFFSET()),
   UpdatedOn DATETIMEOFFSET NOT NULL DEFAULT(SYSDATETIMEOFFSET())
);

CREATE TABLE Movies.MovieCinema
(
   MovieID INT NOT NULL FOREIGN KEY
        REFERENCES Movies.Movie(MovieID),
   CinemaID INT NOT NULL FOREIGN KEY
        REFERENCES Movies.Cinema(CinemaID),
   TicketSales FLOAT NOT NULL,
   IsRemoved INT NOT NULL DEFAULT(0),
   CreatedOn DATETIMEOFFSET NOT NULL DEFAULT(SYSDATETIMEOFFSET()),
   UpdatedOn DATETIMEOFFSET NOT NULL DEFAULT(SYSDATETIMEOFFSET())

   PRIMARY KEY(MovieID, CinemaID)
);

CREATE TABLE Movies.MovieReviews
(
   MovieID INT NOT NULL FOREIGN KEY
        REFERENCES Movies.Movie(MovieID),
   ReviewID INT NOT NULL FOREIGN KEY
        REFERENCES Movies.Review(ReviewID),
   ReviewSite NVARCHAR(32) NOT NULL,
   IsRemoved INT NOT NULL DEFAULT(0),
   CreatedOn DATETIMEOFFSET NOT NULL DEFAULT(SYSDATETIMEOFFSET()),
   UpdatedOn DATETIMEOFFSET NOT NULL DEFAULT(SYSDATETIMEOFFSET())

   PRIMARY KEY(MovieID, ReviewID)
);

CREATE TABLE Movies.MovieDirectors
(
   MovieID INT NOT NULL FOREIGN KEY
        REFERENCES Movies.Movie(MovieID),
   DirectorID INT NOT NULL FOREIGN KEY
        REFERENCES Movies.Directors(DirectorID),
   Salary FLOAT NOT NULL,
   IsRemoved INT NOT NULL DEFAULT(0),
   CreatedOn DATETIMEOFFSET NOT NULL DEFAULT(SYSDATETIMEOFFSET()),
   UpdatedOn DATETIMEOFFSET NOT NULL DEFAULT(SYSDATETIMEOFFSET())

   PRIMARY KEY(MovieID, DirectorID)
);

CREATE TABLE Movies.MovieActor
(
   MovieID INT NOT NULL FOREIGN KEY
        REFERENCES Movies.Movie(MovieID),
   ActorID INT NOT NULL FOREIGN KEY
        REFERENCES Movies.Actors(ActorID),
   Salary FLOAT NOT NULL,
   IsRemoved INT NOT NULL DEFAULT(0),
   CreatedOn DATETIMEOFFSET NOT NULL DEFAULT(SYSDATETIMEOFFSET()),
   UpdatedOn DATETIMEOFFSET NOT NULL DEFAULT(SYSDATETIMEOFFSET())

   PRIMARY KEY(MovieID, ActorID)
);
